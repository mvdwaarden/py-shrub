# default prefixes
@prefix : <https://domain-name/this-file> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:  <http://www.w3.org/2001/XMLSchema#> .

#define the header
<https://domain-name/this-file>
	a owl:Ontology;
	rdfs:label "Your ontology label";
	rdfs:comment "Some addition comment for the ontology" .

# basic types
:Person a owl:Class .
:Role a owl:Class .
:hasRole a owl:ObjectProperty .
:roleName a owl:DatatypeProperty .

# define domains and ranges
:hasRole rdfs:domain :Person ;
	      rdfs:range :Role .
:isChildOf rdfs:domain :Person .

# subclasses and properties
:isModeler rdfs:subPropertyOf :hasRole .
:Person rdfs:subClassOf :Mamal .
:Male rdfs:subClassOf :Person .
:Female rdfs:subClassOf :Person .

#individuals
:Pete a :Person .
:Mary a :Person ;
        a :Female .
:Bob a :Male .

# class constructions
# union (or)
:Person owl:unionOf ( :Male :Female ) .
# complement (not), use owl:equivalentClass
:Animal owl:equivalentClass [owl:complementOf :Person ] .
# one of, use owl:equivalentClass
:Modeler owl:equivalentClass [owl:oneOf ( :Pete :Mary )] .
# intersection (and)
:FemaleModeler owl:intersectionOf( :Female :Modeler ) .

# properties (symmetric, inverse)
:worksWith a owl:SymmetricProperty .
:isParentOf owl:inverseOf :isChildOf .


:Pete :worksWith :Mary .
:Mary :isParentOf :Bob .
